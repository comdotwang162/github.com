package org.zttc.itat.test;


import java.util.Iterator;
import java.util.List;

import org.hibernate.Session;
import org.junit.Test;
import org.zttc.itat.model.Student;
import org.zttc.itat.util.HibernateUtil;

@SuppressWarnings("unchecked")
public class TestSecondCache {
	@Test
	public void test01() {
		Session session = null;
		try {
			/**
			 * 此时会发出一条sql取出所有的学生信息
			 */
			session = HibernateUtil.openSession();
			Student stu = (Student)session.load(Student.class, 1);
			System.out.println(stu.getName()+",---");
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			HibernateUtil.close(session);
		}
		try {
			session = HibernateUtil.openSession();
			session.beginTransaction();
			/**
			 *此时session已经关闭了，但是Student在二级缓存中，所以也不会发出SQL语句
			 */
			Student stu = (Student)session.load(Student.class, 1);
			//会报错，因为二级缓存设置为read-only
//			stu.setName("abc");
			System.out.println(stu.getName()+",---");
			session.getTransaction().commit();
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			HibernateUtil.close(session);
		}
	}
	
	
	@Test
	public void test03() {
		Session session = null;
		try {
			/**
			 * 此时会发出一条sql取出所有的学生信息
			 */
			session = HibernateUtil.openSession();
			List<Student> ls = session.createQuery("from Student")
					.setFirstResult(0).setMaxResults(50).list();
			Iterator<Student> stus = ls.iterator();
			for(;stus.hasNext();) {
				Student stu = stus.next();
				System.out.println(stu.getName());
			}
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			HibernateUtil.close(session);
		}
		
		try {
			session = HibernateUtil.openSession();
			session.beginTransaction();
			/**
			 *此时session已经关闭了，但是Student在二级缓存中，所以也不会发出SQL语句
			 */
			Student stu = (Student)session.load(Student.class, 1);
			//会报错，因为二级缓存设置为read-only
//			stu.setName("abc");
			System.out.println(stu.getName()+",---");
			session.getTransaction().commit();
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			HibernateUtil.close(session);
		}
	}
	
	@Test
	public void test03() {
		Session session = null;
		try {
			/**
			 * 此时会发出一条sql取出所有的学生信息
			 */
			session = HibernateUtil.openSession();
			List<Student> ls = session.createQuery("from Student")
					.setFirstResult(0).setMaxResults(50).list();
			Iterator<Student> stus = ls.iterator();
			for(;stus.hasNext();) {
				Student stu = stus.next();
				System.out.println(stu.getName());
			}
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			HibernateUtil.close(session);
		}
		
		try {
			session = HibernateUtil.openSession();
			session.beginTransaction();
			/**
			 *此时session已经关闭了，但是Student在二级缓存中，所以也不会发出SQL语句
			 */
			Student stu = (Student)session.load(Student.class, 1);
			//会报错，因为二级缓存设置为read-only
//			stu.setName("abc");
			System.out.println(stu.getName()+",---");
			session.getTransaction().commit();
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			HibernateUtil.close(session);
		}
	}
	
}
